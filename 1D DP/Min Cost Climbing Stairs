class Solution {
    public int minCostClimbingStairs(int[] cost) {
        int n = cost.length;
        int dp[] = new int[n+1];
        Arrays.fill(dp, -1);
        int costFrom0 = func(cost, 0, dp);
        int costFrom1 = func(cost, 1, dp);

        return Math.min(costFrom0, costFrom1);
    }

    public int func(int cost[], int i, int dp[]) {
        if(i >= cost.length) {
            return 0;
        }
        if(dp[i] != -1) {
            return dp[i];
        }
        int one = func(cost, i+1, dp);
        int two = func(cost, i+2, dp);
        dp[i] = cost[i] + Math.min(one, two);
        return dp[i];
    }
}
