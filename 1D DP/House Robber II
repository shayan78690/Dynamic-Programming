import java.util.* ;
import java.io.*; 
public class Solution {
	public static long houseRobber(int[] valueInHouse) {
			int n = valueInHouse.length;
			if(n == 1) {
				return valueInHouse[0];
			}
			ArrayList<Integer> temp1 = new ArrayList<>();
			ArrayList<Integer> temp2 = new ArrayList<>();
			for(int i = 0; i < n; i++) {
				if(i != 0) {
					temp1.add(valueInHouse[i]);
				}
				if(i != n-1) {
					temp2.add(valueInHouse[i]);
				}
			}

			return Math.max(func(temp1), func(temp2));
	}	

	public static int func(ArrayList<Integer> arr) {
		int n = arr.size();
		int prev1 = arr.get(0);
		int prev2 = 0;
		for(int i = 1; i < n; i++) {
			int pick = arr.get(i);
			if(i > 1) {
				pick += prev2;
			}
			int not_pick = prev1;

			int current = Math.max(pick, not_pick);
			prev2 = prev1;
			prev1 = current;
		}
		return prev1;
	}
}
