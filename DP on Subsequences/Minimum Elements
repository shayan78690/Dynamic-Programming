import java.util.* ;
import java.io.*; 
public class Solution {
    public static int minimumElements(int nums[], int x) {
        int n = nums.length;
        int dp[][] = new int[n][x+1];
        for(int row[] : dp) {
            Arrays.fill(row, -1);
        }
        int result = func(n-1, x, nums, dp);
        return result == (int)Math.pow(10, 9) ? -1 : result;
    }
    public static int func(int idx, int target, int nums[], int dp[][]) {
        if(idx == 0) {
            if(target % nums[0] == 0) {
                return target / nums[0];
            } else {
                return (int) Math.pow(10, 9);
            }
        }

        if(dp[idx][target] != -1) {
            return dp[idx][target];
        }
        int not_take = func(idx-1, target, nums, dp);
        int take = (int)Math.pow(10, 9);
        if(nums[idx] <= target) {
            take = 1 + func(idx, target-nums[idx], nums, dp);
        }

        dp[idx][target] = Math.min(take, not_take);
        return dp[idx][target];
    }

}
