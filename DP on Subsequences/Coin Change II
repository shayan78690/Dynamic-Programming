class Solution {
    public int change(int amount, int[] coins) {
        int n = coins.length;
        int dp[][] = new int[n][amount+1];
        for(int row[] : dp) {
            Arrays.fill(row, -1);
        }
        return func(n-1, amount, coins, dp);
    }

    public int func(int idx, int target, int coins[], int dp[][]) {
        if(idx == 0) {
            if(target % coins[0] == 0) {
                return 1;
            } else {
                return 0;
            }
        }
        if(dp[idx][target] != -1) {
            return dp[idx][target];
        }
        int not_pick = func(idx-1, target, coins, dp);
        int pick = 0;
        if(coins[idx] <= target) {
            pick = func(idx, target-coins[idx], coins, dp);
        }
        dp[idx][target] = pick + not_pick;
        return dp[idx][target];
    }
}
