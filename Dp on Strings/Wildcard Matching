class Solution {
    public boolean isMatch(String s, String p) {
        int n = s.length();
        int m = p.length();
        int dp[][] = new int[m][n];
        for (int row[] : dp) {
            Arrays.fill(row, -1);
        }
        return func(m - 1, n - 1, p, s, dp) == 1;
    }

    public int func(int i, int j, String p, String s, int dp[][]) {
        if (i < 0 && j < 0) {
            return 1;
        }
        if (i < 0 && j >= 0) {
            return 0;
        }
        if (i >= 0 && j < 0) {
            for (int k = 0; k <= i; k++) {
                if (p.charAt(k) != '*') {
                    return 0;
                }
            }
            return 1;
        }

        if (dp[i][j] != -1) {
            return dp[i][j];
        }

        if (p.charAt(i) == s.charAt(j) || p.charAt(i) == '?') {
            return dp[i][j] = func(i - 1, j - 1, p, s, dp);
        }
        if (p.charAt(i) == '*') {
            return dp[i][j] = (func(i - 1, j, p, s, dp) == 1 || func(i, j - 1, p, s, dp) == 1) ? 1 : 0;
        }
        return 0;
    }
}
