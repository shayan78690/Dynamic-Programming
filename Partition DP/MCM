import java.util.* ;
import java.io.*; 

public class Solution {
	public static int matrixMultiplication(int[] arr , int N) {
		int dp[][] = new int[N][N];
		for(int row[] : dp) {
			Arrays.fill(row, -1);
		}
		return func(1, N-1, arr, dp);
	}
	public static int func(int i, int j, int arr[], int dp[][]) {
		if(i == j) {
			return 0;
		}
		if(dp[i][j] != -1) {
			return dp[i][j];
		}
		int min = Integer.MAX_VALUE;
		for(int k = i; k < j; k++) {
			int steps = (arr[i-1] * arr[k] * arr[j]) + func(i, k, arr, dp) + func(k+1, j, arr, dp);
			min = Math.min(min, steps);
		}
		dp[i][j] = min;
		return dp[i][j];
	}
}
